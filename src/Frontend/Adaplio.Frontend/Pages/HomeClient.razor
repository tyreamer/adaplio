@page "/home/client"
@using Adaplio.Frontend.Services
@using System.Net.Http.Json
@using System.Linq
@inject AuthStateService AuthState
@inject NavigationManager Navigation
@inject ISnackbar Snackbar
@inject HttpClient HttpClient

<PageTitle>Dashboard - Adaplio</PageTitle>

<div class="client-dashboard">
    <!-- Header -->
    <div class="dashboard-header">
        <div class="header-content">
            <div class="brand-logo">
                <span class="logo-icon">ðŸ§¡</span>
                <span class="brand-name">Adaplio</span>
            </div>

            <div class="header-actions">
                <div class="notification-btn">
                    <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="#6B7280" stroke-width="2">
                        <path d="M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9"/>
                        <path d="M13.73 21a2 2 0 0 1-3.46 0"/>
                    </svg>
                </div>
                <div class="profile-avatar">
                    <div class="avatar-circle">
                        <span>J</span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <div class="dashboard-container">
        @if (_isLoading)
        {
            <div class="loading-state">
                <div class="loading-spinner"></div>
                <p>Loading your plan...</p>
            </div>
        }
        else
        {
            <!-- Welcome Section -->
            <div class="welcome-section">
                <h1 class="welcome-title">Hi John ðŸ‘‹</h1>
                <p class="welcome-subtitle">Ready for today's session?</p>
            </div>

            <div class="content-layout">
                <!-- Left Section - Exercises -->
                <div class="exercises-section">
                    <h2 class="section-title">Today's Exercises</h2>

                    <div class="exercises-list">
                        @foreach (var exercise in _todaysExercises)
                        {
                            <div class="exercise-card" @onclick="@(() => ViewExercise(exercise))">
                                <div class="exercise-header">
                                    <div class="exercise-info">
                                        <div class="exercise-icon">
                                            <span class="logo-icon">ðŸ§¡</span>
                                        </div>
                                        <div class="exercise-details">
                                            <h3 class="exercise-name">@exercise.Name</h3>
                                            <p class="exercise-reps">@exercise.Reps</p>
                                        </div>
                                    </div>
                                    <div class="exercise-status">
                                        @if (exercise.IsCompleted)
                                        {
                                            <div class="status-check">
                                                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="#10B981" stroke-width="2">
                                                    <polyline points="20,6 9,17 4,12"/>
                                                </svg>
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="expand-btn">
                                                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="#6B7280" stroke-width="2">
                                                    <polyline points="6,9 12,15 18,9"/>
                                                </svg>
                                            </div>
                                        }
                                    </div>
                                </div>

                                @if (!exercise.IsCompleted)
                                {
                                    <div class="exercise-progress">
                                        <div class="progress-bar">
                                            <div class="progress-fill" style="width: @(exercise.Progress)%"></div>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="exercise-completed">
                                        <div class="completed-bar"></div>
                                    </div>
                                }
                            </div>
                        }
                    </div>
                </div>

                <!-- Right Section - Progress Cards -->
                <div class="progress-section">
                    <!-- XP Progress Card -->
                    <div class="progress-card">
                        <div class="progress-header">
                            <h3 class="progress-title">XP Progress</h3>
                            <span class="progress-percentage">75%</span>
                        </div>
                        <div class="level-info">
                            <span class="current-level">Level 3</span>
                            <span class="next-level">Level 4</span>
                        </div>
                        <div class="xp-progress-bar">
                            <div class="xp-progress-fill" style="width: 75%"></div>
                        </div>
                        <p class="xp-text">150 XP to the next level</p>
                    </div>

                    <!-- Streak Card -->
                    <div class="streak-card">
                        <div class="streak-header">
                            <div class="streak-icon">
                                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="#FF6B35" stroke-width="2">
                                    <path d="M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z"/>
                                </svg>
                            </div>
                            <h3 class="streak-title">3 Day Streak</h3>
                        </div>
                        <div class="streak-indicators">
                            @for (int i = 0; i < 7; i++)
                            {
                                <div class="streak-dot @(i < 3 ? "active" : "")">
                                    @if (i < 3)
                                    {
                                        <svg width="12" height="12" viewBox="0 0 24 24" fill="#FF6B35" stroke="none">
                                            <path d="M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z"/>
                                        </svg>
                                    }
                                </div>
                            }
                        </div>
                    </div>

                    <!-- Trainer's Note -->
                    <div class="trainer-note-card">
                        <div class="trainer-header">
                            <div class="trainer-avatar">
                                <img src="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='40' height='40' viewBox='0 0 40 40'%3E%3Ccircle cx='20' cy='20' r='20' fill='%23E5E7EB'/%3E%3Cpath d='M20 20c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z' fill='%236B7280'/%3E%3C/svg%3E" alt="Dr. Evelyn Reed" />
                            </div>
                            <div class="trainer-info">
                                <h4 class="trainer-name">Dr. Evelyn Reed</h4>
                            </div>
                        </div>
                        <div class="trainer-note">
                            <p>"Great job on your consistency, John! Remember to focus on your form with the squats today. Let's aim for a full range of motion."</p>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<style>
.client-dashboard {
    min-height: 100vh;
    background: #F9F7F4; /* Cream background */
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
}

/* Header */
.dashboard-header {
    background: white;
    border-bottom: 1px solid #E5E7EB;
    padding: 16px 24px;
    position: sticky;
    top: 0;
    z-index: 100;
}

.header-content {
    display: flex;
    align-items: center;
    justify-content: space-between;
    max-width: 1200px;
    margin: 0 auto;
}

.brand-logo {
    display: flex;
    align-items: center;
}

.logo-icon {
    font-size: 24px;
    margin-right: 8px;
}

.brand-name {
    font-size: 24px;
    font-weight: 600;
    color: #1F2937; /* Navy */
}

.header-actions {
    display: flex;
    align-items: center;
    gap: 16px;
}

.notification-btn {
    padding: 8px;
    cursor: pointer;
    transition: background-color 0.2s ease;
    border-radius: 8px;
}

.notification-btn:hover {
    background: #F3F4F6;
}

.profile-avatar {
    cursor: pointer;
}

.avatar-circle {
    width: 36px;
    height: 36px;
    border-radius: 50%;
    background: #FF6B35;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-weight: 600;
    font-size: 16px;
}

/* Main Content */
.dashboard-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 32px 24px;
}

/* Loading State */
.loading-state {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 80px 20px;
    text-align: center;
}

.loading-spinner {
    width: 40px;
    height: 40px;
    border: 3px solid #E5E7EB;
    border-radius: 50%;
    border-top-color: #FF6B35;
    animation: spin 1s ease-in-out infinite;
    margin-bottom: 16px;
}

@@keyframes spin {
    to { transform: rotate(360deg); }
}

.loading-state p {
    color: #6B7280;
    font-size: 16px;
    margin: 0;
}

/* Welcome Section */
.welcome-section {
    margin-bottom: 32px;
}

.welcome-title {
    font-size: 32px;
    font-weight: 700;
    color: #1F2937;
    margin: 0 0 8px 0;
}

.welcome-subtitle {
    font-size: 16px;
    color: #6B7280;
    margin: 0;
}

/* Content Layout */
.content-layout {
    display: grid;
    grid-template-columns: 1fr 350px;
    gap: 32px;
    align-items: start;
}

/* Exercises Section */
.exercises-section {
    background: white;
    border-radius: 16px;
    padding: 24px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    border: 1px solid #E5E7EB;
}

.section-title {
    font-size: 20px;
    font-weight: 600;
    color: #1F2937;
    margin: 0 0 24px 0;
}

.exercises-list {
    display: flex;
    flex-direction: column;
    gap: 16px;
}

.exercise-card {
    border: 1px solid #E5E7EB;
    border-radius: 12px;
    padding: 20px;
    background: white;
    transition: all 0.2s ease;
}

.exercise-card:hover {
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    border-color: #FF6B35;
}

.exercise-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 16px;
}

.exercise-info {
    display: flex;
    align-items: center;
    gap: 16px;
}

.exercise-icon {
    width: 48px;
    height: 48px;
    border-radius: 8px;
    background: rgba(255, 107, 53, 0.1);
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 20px;
}

.exercise-name {
    font-size: 16px;
    font-weight: 600;
    color: #1F2937;
    margin: 0 0 4px 0;
}

.exercise-reps {
    font-size: 14px;
    color: #6B7280;
    margin: 0;
}

.exercise-status {
    display: flex;
    align-items: center;
}

.status-check {
    width: 32px;
    height: 32px;
    border-radius: 50%;
    background: #D1FAE5;
    display: flex;
    align-items: center;
    justify-content: center;
}

.expand-btn {
    width: 32px;
    height: 32px;
    border-radius: 50%;
    background: #F3F4F6;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: background-color 0.2s ease;
}

.expand-btn:hover {
    background: #E5E7EB;
}

/* Progress Bars */
.exercise-progress,
.exercise-completed {
    margin-top: 12px;
}

.progress-bar {
    height: 6px;
    background: #F3F4F6;
    border-radius: 3px;
    overflow: hidden;
}

.progress-fill {
    height: 100%;
    background: #FF6B35;
    transition: width 0.3s ease;
}

.completed-bar {
    height: 6px;
    background: #10B981;
    border-radius: 3px;
}

/* Progress Section */
.progress-section {
    display: flex;
    flex-direction: column;
    gap: 20px;
}

/* Progress Cards */
.progress-card,
.streak-card,
.trainer-note-card {
    background: white;
    border-radius: 16px;
    padding: 20px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    border: 1px solid #E5E7EB;
}

/* XP Progress Card */
.progress-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 16px;
}

.progress-title {
    font-size: 16px;
    font-weight: 600;
    color: #1F2937;
    margin: 0;
}

.progress-percentage {
    font-size: 16px;
    font-weight: 600;
    color: #FF6B35;
}

.level-info {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 12px;
}

.current-level,
.next-level {
    font-size: 12px;
    font-weight: 500;
    color: #6B7280;
}

.xp-progress-bar {
    height: 8px;
    background: #F3F4F6;
    border-radius: 4px;
    overflow: hidden;
    margin-bottom: 8px;
}

.xp-progress-fill {
    height: 100%;
    background: #FF6B35;
    transition: width 0.3s ease;
}

.xp-text {
    font-size: 12px;
    color: #6B7280;
    text-align: center;
    margin: 0;
}

/* Streak Card */
.streak-header {
    display: flex;
    align-items: center;
    gap: 12px;
    margin-bottom: 16px;
}

.streak-icon {
    width: 32px;
    height: 32px;
    border-radius: 50%;
    background: rgba(255, 107, 53, 0.1);
    display: flex;
    align-items: center;
    justify-content: center;
}

.streak-title {
    font-size: 16px;
    font-weight: 600;
    color: #1F2937;
    margin: 0;
}

.streak-indicators {
    display: flex;
    justify-content: center;
    gap: 8px;
}

.streak-dot {
    width: 24px;
    height: 24px;
    border-radius: 50%;
    background: #F3F4F6;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s ease;
}

.streak-dot.active {
    background: rgba(255, 107, 53, 0.1);
    border: 2px solid #FF6B35;
}

/* Trainer's Note Card */
.trainer-header {
    display: flex;
    align-items: center;
    gap: 12px;
    margin-bottom: 16px;
}

.trainer-avatar {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    overflow: hidden;
    flex-shrink: 0;
}

.trainer-avatar img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.trainer-name {
    font-size: 14px;
    font-weight: 600;
    color: #1F2937;
    margin: 0;
}

.trainer-note p {
    font-size: 14px;
    line-height: 1.5;
    color: #4B5563;
    margin: 0;
    font-style: italic;
}

/* Responsive Design */
@@media (max-width: 1024px) {
    .content-layout {
        grid-template-columns: 1fr;
        gap: 24px;
    }

    .progress-section {
        grid-template-columns: 1fr 1fr;
        display: grid;
        gap: 20px;
    }

    .trainer-note-card {
        grid-column: 1 / -1;
    }
}

@@media (max-width: 768px) {
    .dashboard-container {
        padding: 20px 16px;
    }

    .welcome-title {
        font-size: 28px;
    }

    .progress-section {
        grid-template-columns: 1fr;
    }

    .exercise-card {
        padding: 16px;
    }

    .exercise-header {
        flex-direction: column;
        align-items: flex-start;
        gap: 12px;
    }

    .exercise-info {
        width: 100%;
    }

    .exercise-status {
        align-self: flex-end;
    }
}

@@media (max-width: 640px) {
    .header-content {
        flex-direction: column;
        gap: 16px;
        align-items: stretch;
    }

    .header-actions {
        justify-content: flex-end;
    }
}
</style>

@code {
    private bool _isLoading = true;
    private List<TodayExercise> _todaysExercises = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        _isLoading = true;
        StateHasChanged();

        try
        {
            // Simulate API call
            await Task.Delay(1000);

            // Mock data for today's exercises
            _todaysExercises = new List<TodayExercise>
            {
                new() { Id = "1", Name = "Squats", Reps = "10 reps", Progress = 100, IsCompleted = true },
                new() { Id = "2", Name = "Lunges", Reps = "15 reps", Progress = 60, IsCompleted = false },
                new() { Id = "3", Name = "Calf Raises", Reps = "20 reps", Progress = 0, IsCompleted = false },
                new() { Id = "4", Name = "Hamstring Curls", Reps = "12 reps", Progress = 0, IsCompleted = false }
            };
        }
        catch
        {
            // Handle error
        }
        finally
        {
            _isLoading = false;
            StateHasChanged();
        }
    }

    private void ViewExercise(TodayExercise exercise)
    {
        // Navigate to exercise detail page
        Navigation.NavigateTo($"/exercise/{exercise.Id}");
    }

    public class TodayExercise
    {
        public string Id { get; set; } = "";
        public string Name { get; set; } = "";
        public string Reps { get; set; } = "";
        public int Progress { get; set; }
        public bool IsCompleted { get; set; }
    }
}