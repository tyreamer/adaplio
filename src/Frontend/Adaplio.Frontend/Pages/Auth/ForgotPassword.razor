@page "/auth/trainer/forgot-password"
@layout EmptyLayout
@using System.ComponentModel.DataAnnotations
@using System.Net.Http.Json
@inject HttpClient Http
@inject NavigationManager Navigation
@inject ISnackbar Snackbar

<PageTitle>Forgot Password - Adaplio</PageTitle>

<MudContainer MaxWidth="MaxWidth.Small" Class="mt-16">
    <MudPaper Class="pa-8">
        <div class="d-flex flex-column align-center mb-6">
            <MudIcon Icon="@Icons.Material.Filled.Lock" Size="Size.Large" Color="Color.Primary" />
            <MudText Typo="Typo.h4" Class="mt-2">Forgot Password?</MudText>
            <MudText Typo="Typo.body1" Color="Color.Secondary" Class="text-center mt-2">
                No worries! Enter your email address and we'll send you a code to reset your password.
            </MudText>
        </div>

        @if (_emailSent)
        {
            <MudAlert Severity="Severity.Success" Class="mb-4">
                <MudText Typo="Typo.body2">
                    If an account exists with that email, we've sent a 6-digit code to reset your password.
                    The code will expire in 1 hour.
                </MudText>
            </MudAlert>

            <MudButton Variant="Variant.Filled"
                       Color="Color.Primary"
                       Size="Size.Large"
                       FullWidth="true"
                       Href="/auth/trainer/reset-password"
                       Class="mt-4">
                Enter Reset Code
            </MudButton>

            <MudDivider Class="my-6" />

            <div class="text-center">
                <MudText Typo="Typo.body2" Color="Color.Secondary" Class="mb-2">
                    Didn't receive the code?
                </MudText>
                <MudButton Variant="Variant.Text"
                           Color="Color.Primary"
                           OnClick="ResetForm"
                           Disabled="@_isLoading">
                    Try Again
                </MudButton>
            </div>
        }
        else
        {
            <EditForm Model="@_model" OnValidSubmit="@SendResetCode">
                <DataAnnotationsValidator />

                <MudStack Spacing="4">
                    <MudTextField @bind-Value="_model.Email"
                                  For="@(() => _model.Email)"
                                  Label="Email Address"
                                  Variant="Variant.Outlined"
                                  InputType="InputType.Email"
                                  Disabled="@_isLoading"
                                  HelperText="Enter the email associated with your trainer account" />

                    <MudButton ButtonType="ButtonType.Submit"
                               Variant="Variant.Filled"
                               Color="Color.Primary"
                               Size="Size.Large"
                               FullWidth="true"
                               Disabled="@_isLoading">
                        @if (_isLoading)
                        {
                            <MudProgressCircular Size="Size.Small" Indeterminate="true" Class="mr-2" />
                            <text>Sending Code...</text>
                        }
                        else
                        {
                            <MudIcon Icon="@Icons.Material.Filled.Send" Class="mr-2" />
                            <text>Send Reset Code</text>
                        }
                    </MudButton>
                </MudStack>
            </EditForm>
        }

        <MudDivider Class="my-6" />

        <div class="text-center">
            <MudText Typo="Typo.body2" Color="Color.Secondary" Class="mb-2">
                Remember your password?
            </MudText>
            <MudButton Variant="Variant.Text"
                       Color="Color.Primary"
                       Href="/auth/trainer/login">
                Back to Login
            </MudButton>
        </div>
    </MudPaper>
</MudContainer>

@code {
    private readonly ForgotPasswordModel _model = new();
    private bool _isLoading = false;
    private bool _emailSent = false;

    private async Task SendResetCode()
    {
        _isLoading = true;

        try
        {
            var response = await Http.PostAsJsonAsync("/auth/trainer/forgot-password", new { Email = _model.Email });

            if (response.IsSuccessStatusCode)
            {
                _emailSent = true;
            }
            else
            {
                var error = await response.Content.ReadAsStringAsync();
                Snackbar.Add("Failed to send reset code. Please try again.", Severity.Error);
            }
        }
        catch (Exception)
        {
            Snackbar.Add("An error occurred. Please try again later.", Severity.Error);
        }
        finally
        {
            _isLoading = false;
        }
    }

    private void ResetForm()
    {
        _model.Email = "";
        _emailSent = false;
    }

    public class ForgotPasswordModel
    {
        [Required(ErrorMessage = "Email is required")]
        [EmailAddress(ErrorMessage = "Invalid email address")]
        public string Email { get; set; } = "";
    }
}
