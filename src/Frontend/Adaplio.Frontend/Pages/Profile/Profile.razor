@page "/profile"
@page "/settings"
@using Adaplio.Frontend.Services
@using Adaplio.Frontend.Components.Profile
@inject AuthStateService AuthState
@inject NavigationManager Navigation

<PageTitle>Profile | Adaplio</PageTitle>

@if (!AuthState.IsAuthenticated)
{
    <MudContainer MaxWidth="MaxWidth.Small" Class="mt-8">
        <MudPaper Class="pa-8 text-center">
            <MudIcon Icon="@Icons.Material.Filled.Lock" Size="Size.Large" Color="Color.Primary" />
            <MudText Typo="Typo.h5" Class="mt-4 mb-2">Authentication Required</MudText>
            <MudText Typo="Typo.body1" Color="Color.Secondary" Class="mb-4">
                Please sign in to access your profile settings.
            </MudText>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" Href="/auth/client/login">
                Sign In
            </MudButton>
        </MudPaper>
    </MudContainer>
}
else
{
    <div class="profile-page">
        <!-- Profile Hero Section -->
        <ProfileHero />

        <!-- Profile Content -->
        <div class="profile-content">
            <ProfileTabs />
        </div>
    </div>
}

<style>
.profile-page {
    max-width: 1400px;
    margin: 0 auto;
    padding: 32px 24px 64px;
    background: #F5F5F5;
    min-height: calc(100vh - 64px);
}

.profile-content {
    margin-top: 0;
}

@@media (min-width: 900px) {
    .profile-page {
        padding: 40px 32px 80px;
    }
}

@@media (min-width: 1200px) {
    .profile-page {
        padding: 48px 40px 96px;
    }
}
</style>


@code {
    protected override async Task OnInitializedAsync()
    {
        // Ensure auth state is loaded
        if (!AuthState.IsInitialized)
        {
            await AuthState.InitializeAsync();
        }

        // Redirect if not authenticated
        if (!AuthState.IsAuthenticated)
        {
            Navigation.NavigateTo("/auth/client/login");
            return;
        }
    }
}