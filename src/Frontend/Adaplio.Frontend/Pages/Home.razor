@page "/"
@page "/home"
@layout EmptyLayout
@inject NavigationManager Navigation
@inject Adaplio.Frontend.Theme.ThemeService ThemeService

<PageTitle>Welcome to Adaplio</PageTitle>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" />
</head>
<body>
<div class="landing-page">
    <!-- Main Content -->
    <div class="main-content">
        <!-- Header -->
        <div class="header">
            <div class="header-content">
                <div class="brand-logo">
                    <span class="logo-text">adaplio</span>
                </div>
                <div class="header-actions">
                    <div class="theme-toggle" @onclick="ToggleTheme">
                        @if (_isDarkMode)
                        {
                            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"/>
                            </svg>
                        }
                        else
                        {
                            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                <circle cx="12" cy="12" r="5"/>
                                <path d="M12 1v2M12 21v2M4.22 4.22l1.42 1.42M18.36 18.36l1.42 1.42M1 12h2M21 12h2M4.22 19.78l1.42-1.42M18.36 5.64l1.42-1.42"/>
                            </svg>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="welcome-section">
            <h1 class="main-title">welcome to adaplio</h1>
            <p class="main-subtitle">from recovery to performance, adaplio helps clients and trainers work together to stay consistent and achieve results.</p>
        </div>

        <div class="user-type-cards">
            <div class="user-card therapist-card">
                <div class="card-icon">
                    <svg width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="#FF6B35" stroke-width="2">
                        <path d="M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2"/>
                        <circle cx="9" cy="7" r="4"/>
                        <path d="M22 21v-2a4 4 0 0 0-3-3.87"/>
                        <path d="M16 3.13a4 4 0 0 1 0 7.75"/>
                    </svg>
                </div>
                <h2 class="card-title">For Therapists & Trainers</h2>
                <p class="card-description">Create personalized plans, track client progress, and manage your practice efficiently.</p>
                <button class="card-button primary" @onclick="NavigateToTrainerSignup">Get Started</button>
            </div>

            <div class="user-card client-card">
                <div class="card-icon">
                    <svg width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="#6B7280" stroke-width="2">
                        <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"/>
                        <circle cx="12" cy="7" r="4"/>
                    </svg>
                </div>
                <h2 class="card-title">For Clients</h2>
                <p class="card-description">Access your exercise plan, track your recovery, and stay connected with your therapist.</p>
                <button class="card-button secondary" @onclick="NavigateToClientLogin">Login</button>
            </div>
        </div>

        <div class="footer">
            <p class="footer-text">Â© 2025 Adaplio. All rights reserved.</p>
        </div>
    </div>
</div>
</body>
</html>

<style>
/* Base Styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

.landing-page {
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
    background: white;
    min-height: 100vh;
    color: #1F2937;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

/* Header */
.header {
    width: 100%;
    padding: 20px 0;
}

.header-content {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 24px;
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.brand-logo .logo-text {
    font-size: 24px;
    font-weight: 700;
    color: #FF6B35;
}

.header-actions {
    display: flex;
    align-items: center;
}

.theme-toggle {
    padding: 8px;
    cursor: pointer;
    border-radius: 8px;
    transition: background-color 0.2s ease;
    color: #6B7280;
}

.theme-toggle:hover {
    background: #F3F4F6;
    color: #1F2937;
}

/* Main Content */
.main-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 40px 24px;
    max-width: 1200px;
    margin: 0 auto;
    width: 100%;
}

.welcome-section {
    text-align: center;
    margin-bottom: 60px;
}

.main-title {
    font-size: 48px;
    font-weight: 700;
    color: #1F2937;
    margin-bottom: 16px;
    line-height: 1.1;
}

.main-subtitle {
    font-size: 18px;
    color: #6B7280;
    line-height: 1.6;
    max-width: 600px;
    margin: 0 auto;
}

/* User Type Cards */
.user-type-cards {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 32px;
    width: 100%;
    max-width: 700px;
    margin-bottom: 80px;
}

.user-card {
    background: white;
    border: 1px solid #E5E7EB;
    border-radius: 16px;
    padding: 32px 24px;
    text-align: center;
    transition: all 0.2s ease;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

.user-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
    border-color: #D1D5DB;
}

.therapist-card .card-icon {
    background: rgba(255, 107, 53, 0.1);
    border-radius: 50%;
    width: 80px;
    height: 80px;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0 auto 24px auto;
}

.client-card .card-icon {
    background: rgba(107, 114, 128, 0.1);
    border-radius: 50%;
    width: 80px;
    height: 80px;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0 auto 24px auto;
}

.card-title {
    font-size: 20px;
    font-weight: 600;
    color: #1F2937;
    margin-bottom: 12px;
    line-height: 1.2;
}

.card-description {
    font-size: 16px;
    color: #6B7280;
    line-height: 1.5;
    margin-bottom: 24px;
}

.card-button {
    width: 100%;
    padding: 14px 24px;
    border-radius: 8px;
    font-size: 16px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s ease;
    border: none;
}

.card-button.primary {
    background: #FF6B35;
    color: white;
}

.card-button.primary:hover {
    background: #E55A2E;
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(255, 107, 53, 0.3);
}

.card-button.secondary {
    background: #F3F4F6;
    color: #6B7280;
    border: 1px solid #E5E7EB;
}

.card-button.secondary:hover {
    background: #E5E7EB;
    color: #1F2937;
    border-color: #D1D5DB;
}

/* Footer */
.footer {
    text-align: center;
    padding: 20px 0;
}

.footer-text {
    font-size: 14px;
    color: #9CA3AF;
}

/* Responsive Design */
@@media (max-width: 768px) {
    .header-content {
        padding: 0 16px;
    }

    .main-content {
        padding: 40px 16px 20px 16px;
    }

    .main-title {
        font-size: 36px;
    }

    .main-subtitle {
        font-size: 16px;
    }

    .user-type-cards {
        grid-template-columns: 1fr;
        gap: 24px;
        margin-bottom: 60px;
    }

    .user-card {
        padding: 24px 20px;
    }

    .card-icon {
        width: 64px;
        height: 64px;
    }

    .card-icon svg {
        width: 36px;
        height: 36px;
    }

    .card-title {
        font-size: 18px;
    }

    .card-description {
        font-size: 14px;
    }
}

@@media (max-width: 480px) {
    .main-title {
        font-size: 28px;
    }

    .main-subtitle {
        font-size: 14px;
    }

    .user-card {
        padding: 20px 16px;
    }

    .card-button {
        padding: 12px 20px;
        font-size: 14px;
    }
}
</style>

@code {
    private bool _isDarkMode = false;

    protected override async Task OnInitializedAsync()
    {
        await ThemeService.InitializeAsync();
        _isDarkMode = ThemeService.IsDarkMode;
        ThemeService.OnThemeChanged += HandleThemeChanged;
    }

    private void HandleThemeChanged()
    {
        _isDarkMode = ThemeService.IsDarkMode;
        StateHasChanged();
    }

    private async Task ToggleTheme()
    {
        await ThemeService.ToggleThemeAsync();
    }

    private void NavigateToTrainerSignup()
    {
        Navigation.NavigateTo("/auth/trainer/login");
    }

    private void NavigateToClientLogin()
    {
        Navigation.NavigateTo("/auth/client/login");
    }

    public void Dispose()
    {
        ThemeService.OnThemeChanged -= HandleThemeChanged;
    }
}