@using Adaplio.Frontend.Services
@inject AuthStateService AuthState
@inject NavigationManager Navigation

<div class="app-navigation">
    <div class="nav-content">
        <!-- Brand/Logo -->
        <div class="nav-brand" @onclick="@(() => NavigateTo(GetHomeUrl()))">
            <span class="logo-icon">ðŸ§¡</span>
            <span class="brand-name">Adaplio</span>
        </div>

        <!-- Navigation Links (optional, for trainer) -->
        @if (ShowNavLinks && AuthState.IsTrainer)
        {
            <div class="nav-links">
                <a href="/home/trainer" class="nav-link @(IsActive("/home/trainer") ? "active" : "")">Dashboard</a>
                <a href="/exercises" class="nav-link @(IsActive("/exercises") ? "active" : "")">Exercises</a>
                <a href="/home/trainer" class="nav-link @(IsActive("/patients") ? "active" : "")">Patients</a>
                <a href="/messages" class="nav-link @(IsActive("/messages") ? "active" : "")">Messages</a>
            </div>
        }

        <div class="nav-spacer"></div>

        <!-- Right-side actions -->
        <div class="nav-actions">
            @if (AuthState.IsAuthenticated)
            {
                <!-- Notification bell -->
                <div class="notification-btn" @onclick="OnNotificationClick">
                    <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9"/>
                        <path d="M13.73 21a2 2 0 0 1-3.46 0"/>
                    </svg>
                    @if (NotificationCount > 0)
                    {
                        <span class="notification-badge">@NotificationCount</span>
                    }
                </div>

                <!-- Profile avatar -->
                <div class="profile-avatar" @onclick="@(() => NavigateTo("/profile"))">
                    @if (!string.IsNullOrEmpty(AuthState.User?.ProfileImageUrl))
                    {
                        <img src="@AuthState.User.ProfileImageUrl" alt="Profile" class="avatar-image" />
                    }
                    else
                    {
                        <div class="avatar-placeholder">
                            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="#6B7280" stroke-width="2">
                                <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"/>
                                <circle cx="12" cy="7" r="4"/>
                            </svg>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</div>

<style>
.app-navigation {
    background: white;
    border-bottom: 1px solid #E5E7EB;
    position: sticky;
    top: 0;
    z-index: 100;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
}

.nav-content {
    display: flex;
    align-items: center;
    gap: 32px;
    max-width: 1400px;
    margin: 0 auto;
    padding: 12px 24px;
}

.nav-brand {
    display: flex;
    align-items: center;
    gap: 8px;
    cursor: pointer;
    user-select: none;
}

.logo-icon {
    font-size: 24px;
}

.brand-name {
    font-size: 20px;
    font-weight: 600;
    color: #1F2937;
}

.nav-links {
    display: flex;
    align-items: center;
    gap: 24px;
}

.nav-link {
    color: #6B7280;
    text-decoration: none;
    font-size: 15px;
    font-weight: 500;
    padding: 8px 12px;
    border-radius: 6px;
    transition: all 0.2s ease;
}

.nav-link:hover {
    color: #374151;
    background: #F3F4F6;
}

.nav-link.active {
    color: #FF6B35;
    background: #FFF5F2;
}

.nav-spacer {
    flex: 1;
}

.nav-actions {
    display: flex;
    align-items: center;
    gap: 16px;
}

.notification-btn {
    position: relative;
    width: 36px;
    height: 36px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 8px;
    cursor: pointer;
    transition: background-color 0.2s ease;
    color: #6B7280;
}

.notification-btn:hover {
    background: #F3F4F6;
}

.notification-badge {
    position: absolute;
    top: 4px;
    right: 4px;
    background: #EF4444;
    color: white;
    font-size: 10px;
    font-weight: 600;
    padding: 2px 5px;
    border-radius: 10px;
    min-width: 16px;
    text-align: center;
}

.profile-avatar {
    width: 36px;
    height: 36px;
    cursor: pointer;
}

.avatar-image {
    width: 36px;
    height: 36px;
    border-radius: 50%;
    object-fit: cover;
    border: 2px solid #E5E7EB;
}

.avatar-placeholder {
    width: 36px;
    height: 36px;
    border-radius: 50%;
    background: #F3F4F6;
    border: 2px solid #E5E7EB;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background-color 0.2s ease;
}

.avatar-placeholder:hover {
    background: #E5E7EB;
}

/* Mobile responsive */
@@media (max-width: 768px) {
    .nav-content {
        gap: 16px;
        padding: 12px 16px;
    }

    .nav-links {
        display: none;
    }

    .brand-name {
        font-size: 18px;
    }
}
</style>

@code {
    [Parameter] public bool ShowNavLinks { get; set; } = true;
    [Parameter] public int NotificationCount { get; set; } = 0;
    [Parameter] public EventCallback OnNotificationClick { get; set; }

    private bool IsActive(string path)
    {
        var currentPath = new Uri(Navigation.Uri).AbsolutePath;
        return currentPath.StartsWith(path, StringComparison.OrdinalIgnoreCase);
    }

    private string GetHomeUrl()
    {
        if (AuthState.IsClient) return "/home/client";
        if (AuthState.IsTrainer) return "/home/trainer";
        return "/";
    }

    private void NavigateTo(string url)
    {
        Navigation.NavigateTo(url);
    }
}
